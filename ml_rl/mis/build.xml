<?xml version="1.0" encoding="UTF-8"?>
<project name="mis" default="deploy" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
	<!-- ====================================================================== -->
    <!-- Nome do Sistema                                           				-->
    <!-- ====================================================================== -->
	<property name="project.build.finalName" value="mis"/>
	
	<!-- ====================================================================== -->
    <!-- Variaveis de Ambiente                                                  -->
    <!-- ====================================================================== -->
	<property environment="env" />
    
	<!-- ====================================================================== -->
    <!-- Capturando as variaveis setadas no build.properties                    -->
    <!-- ====================================================================== -->
    <property file="${user.home}/build.properties"/>
    <property file="build.properties"/>

	<!-- ====================================================================== -->
    <!-- Diretorio de construcao do sistema				                        -->
    <!-- ====================================================================== -->
    <property name="project.build.directory" value="build"/>
	
	<!-- ====================================================================== -->
	<!-- Variaveis para construcao da aplicacao				                    -->
	<!-- ====================================================================== -->
    <property name="project.build.outputDirectory" value="${project.build.directory}/classes"/>
    <property name="project.source.directory" value="src/"/>
    <property name="project.resource.directory" value="src/resources"/>
    <property name="project.web.dir"    value="WebContent" />
    <property name="project.webinf.dir" value="${project.web.dir}/WEB-INF" />
    <property name="project.lib.classpath" value="${project.webinf.dir}/lib" />
	<property name="project.resource.dir"  value="resources" />
	
	<!-- ====================================================================== -->
	<!-- Variaveis para construcao do teste  				                    -->
	<!-- ====================================================================== -->
    <property name="project.build.testOutputDirectory" value="${project.build.directory}/test-classes"/>
    <property name="project.testSource.directory" value="test/"/>
    <property name="project.testResource.directory" value="test/resources"/>
    <property name="project.test.reportsOutputDirectory" value="${project.build.directory}/test-results"/>
    <property name="project.test.useFile" value="true"/>

	<!-- ====================================================================== -->
	<!-- Variaveis para utilizacao com o maven  				                -->
	<!-- ====================================================================== -->
    <property name="maven.repo.central" value="http://repo1.maven.org/maven2"/>
    <property name="maven.repo.jboss-public" value="https://repository.jboss.org/nexus/content/groups/public"/>
    <property name="maven.repo.local" value="${user.home}/.m2/repository"/>
    <property name="maven.settings.offline" value="false"/>
    <property name="maven.settings.interactiveMode" value="true"/>
	
    <!-- ====================================================================== -->
	<!-- Variaveis para utilizacao com o ivy     				                -->
    <!-- ====================================================================== -->
    <property name="ivy.install.version" value="2.2.0-rc1"/>
    <property name="ivy.jar.dir" value="${basedir}/.ivy"/>
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar"/>
	
    <!-- ====================================================================== -->
    <!-- Vareiaveis utilizadas para o JBOSS                                     -->
    <!-- ====================================================================== -->
	<property name="jboss.deploy.dir"   value="${env.JBOSS_HOME}/server/default/deploy" />
	<property name="jboss.default.lib"  value="${env.JBOSS_HOME}/server/default/lib" />
	<property name="jboss.default.conf" value="${env.JBOSS_HOME}/server/default/conf" />

    <!-- ====================================================================== -->
    <!-- Ivy bootstrap targets                                                  -->
    <!-- ====================================================================== -->
    <target name="init-ivy">
        <available property="ivy.installed" value="true" file="${ivy.jar.file}" type="file"/>
    </target>

    <target name="download-ivy" depends="init-ivy" unless="ivy.installed">
        <mkdir dir="${ivy.jar.dir}"/>
        <echo message="Installing ivy..."/>
        <get src="${maven.repo.central}/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
             dest="${ivy.jar.file}"/>
    </target>

    <target name="load-ivy" depends="init-ivy,download-ivy">
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
        <ivy:settings file="${basedir}/ivysettings.xml"/>
    </target>

    <target name="clean-ivy" depends="load-ivy">
        <ivy:cleancache/>
    </target>

    <!-- ====================================================================== -->
    <!-- Defining classpaths                                                    -->
    <!-- ====================================================================== -->
    <target name="init" depends="load-ivy">
    	<echo message="[init]Construindo o build.path do projeto." />
    	<path id="project.build.path">
			<fileset dir="${project.lib.classpath}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${env.JBOSS_HOME}/common/lib">
				<include name="*.jar" />
			</fileset>
			<pathelement location="${project.build.directory}" />
		</path>
    </target>
	
	<!-- ====================================================================== -->
    <!-- Defining classpaths                                                    -->
    <!-- ====================================================================== -->
	<target name="resources" depends="init">
		<echo message="[Resource]Copia todos os arquivos .conf/.properties/.xml da pasta src para classes" />
		<mkdir dir="${project.build.outputDirectory}" />
		<copy todir="${project.build.outputDirectory}" includeEmptyDirs="no">
			<fileset dir="${project.source.directory}/resources">
				<patternset>
					<include name="**/*.conf" />
					<include name="**/*.xml" />
				</patternset>
			</fileset>
		</copy>
		
		<mkdir dir="${project.build.outputDirectory}/resources" />
		<copy todir="${project.build.outputDirectory}/resources" includeEmptyDirs="no">
			<fileset dir="${project.source.directory}/resources">
				<patternset>
					<include name="**/*.properties" />
				</patternset>
			</fileset>
		</copy>
		
	</target>
	
    <!-- ====================================================================== -->
    <!-- Compilation target                                                     -->
    <!-- ====================================================================== -->
    <target name="compile" depends="resources" description="Compile the code">
        <ivy:resolve conf="compile-only"/>
        <ivy:cachepath pathid="build.classpath" conf="compile-only"/>
        <mkdir dir="${project.build.outputDirectory}"/>
        <javac destdir="${project.build.outputDirectory}"
                 nowarn="true"
                 debug="true"
                 optimize="true"
                 deprecation="false"
                 target="1.6"
                 verbose="false"
                 fork="true"
                 source="1.6"
        		 includeantruntime="true">
            <src>
                <pathelement location="${project.source.directory}"/>
            </src>
            <classpath>
            	<path refid="project.build.path" />
            	<path refid="build.classpath" />
            </classpath>
        </javac>
    	<copy file="${project.resource.dir}/jndi.properties" todir="${project.build.directory}" />
    </target>

    <!-- ====================================================================== -->
    <!-- Test compilation target                                                -->
    <!-- ====================================================================== -->
    <target name="compile-tests" depends="compile" description="Compile the test code"	unless="maven.test.skip">
        <ivy:resolve conf="test"/>
        <ivy:cachepath pathid="build.test.classpath" conf="test"/>
        <mkdir dir="${project.build.testOutputDirectory}"/>
        <javac destdir="${project.build.testOutputDirectory}"
                 nowarn="true"
                 debug="true"
                 optimize="true"
                 deprecation="false"
                 target="1.6"
                 verbose="false"
                 fork="true"
                 source="1.6"
        		 includeantruntime="true">
            <src>
                <pathelement location="${project.testSource.directory}"/>
            </src>
            <classpath>
            	<path refid="project.build.path" />
            	<path refid="build.classpath"/>
                <path refid="build.test.classpath"/>
                <pathelement location="${project.build.outputDirectory}"/>
            </classpath>
        </javac>
        <copy todir="${project.build.testOutputDirectory}">
            <fileset dir="${project.testResource.directory}"/>
        </copy>
    </target>

    <!-- ====================================================================== -->
    <!-- Test targets                                                           -->
    <!-- ====================================================================== -->
    <target name="test-weld-embedded" depends="compile-tests" description="Run the test cases on Weld Embedded">
        <mkdir dir="${project.test.reportsOutputDirectory}"/>
        <ivy:resolve conf="test-weld-embedded"/>
        <ivy:cachepath pathid="build.test.classpath.weld-embedded" conf="test-weld-embedded"/>
        <junit printSummary="yes" haltonerror="true" haltonfailure="true" fork="true" forkmode="perBatch" dir=".">
            <sysproperty key="basedir" value="."/>
            <formatter type="xml"/>
            <formatter type="plain" usefile="${project.test.useFile}"/>
            <classpath>
                <path refid="build.test.classpath.weld-embedded"/>
                <pathelement location="${project.build.outputDirectory}"/>
                <pathelement location="${project.build.testOutputDirectory}"/>
            </classpath>
            <batchtest todir="${project.test.reportsOutputDirectory}" unless="test">
                <fileset dir="${project.testSource.directory}">
                    <include name="**/Test*.java"/>
                    <include name="**/*Test.java"/>
                    <include name="**/*TestCase.java"/>
                    <exclude name="**/*Abstract*Test.java"/>
                </fileset>
            </batchtest>
            <batchtest todir="${project.test.reportsOutputDirectory}" if="test">
                <fileset dir="${project.testSource.directory}">
                    <include name="**/${test}.java"/>
                    <exclude name="**/*Abstract*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

	<target name="test" depends="test-weld-embedded" description="Run the test cases (default)"/>

	<!-- ====================================================================== -->
    <!--  Comprime a aplicação em um WAR                                        -->
   	<!-- ====================================================================== -->
	<target depends="compile" name="war">
		<echo message="[WAR]Empacotando a aplicacao num arquivo .war" />
		<war destfile="${project.build.directory}/${project.build.finalName}.war" webxml="${project.webinf.dir}/web.xml">
			<fileset dir="WebContent" />
			<lib dir="${project.lib.classpath}" />
			<classes dir="${project.build.outputDirectory}" />
		</war>
	</target>

	<!-- ====================================================================== -->
    <!--  Realiza as copia dos arquivos para o JBOSS                            -->
   	<!-- ====================================================================== -->
	<target depends="war" name="deploy">
		<echo message="[Deploy]Deletando arquivos de configuracao e deploy" />
		<delete file="${jboss.deploy.dir}/${ds-name}-ds.xml" />
		<delete file="${jboss.default.conf}/login-config.xml" />
		<delete file="${jboss.default.conf}/standardjbosscmp-jdbc.xml" />

		<echo message="[Deploy] Copiando XML de configuração para pasta do Jboss" />
		<copy todir="${jboss.default.conf}">
			<fileset dir="${project.resource.dir}" includes="login-config.xml" />
			<fileset dir="${project.resource.dir}" includes="standardjbosscmp-jdbc.xml" />
		</copy>


		<echo message="[Deploy] Copiando .jar para pasta lib do Jboss" />
		<copy todir="${jboss.default.lib}">
			<fileset dir="${project.lib.classpath}">
				<include name="${postgres.name.driver}">
				</include>
			</fileset>
		</copy>

		<echo message="[Deploy] Copiando o war e ds para pasta deploy do Jboss." />
		<copy todir="${jboss.deploy.dir}">
			<fileset dir="${project.build.directory}" includes="*.jar,*.war,*.ear" />
			<fileset dir="${project.resource.dir}" includes="${ds.name}-ds.xml" />
		</copy>
	</target>
	
	<!-- ====================================================================== -->
    <!--  Retira todos os arquivos do inseridos no JBOSS                        -->
   	<!-- ====================================================================== -->
	<target name="undeploy">
		<echo message="[Undeploy]Reorganizado as pastas." />
		<delete dir="${project.build.directory}" />
		<mkdir dir="${project.build.directory}" />
		<mkdir dir="${project.build.outputDirectory}" />
		
		<echo message="[Undeploy]Reorganizado as pastas." />
		<delete file="${jboss.deploy.dir}/${app.name}.war" />
		<delete file="${jboss.deploy.dir}/${ds.name}-ds.xml" />
	</target>

	<!-- ====================================================================== -->
    <!--  Retira e Colocaos arquivos novamente no JBOSS                         -->
   	<!-- ====================================================================== -->
	<target depends="undeploy,deploy" name="redeploy" />

    <!-- ====================================================================== -->
    <!-- Dependency reports                                                     -->
    <!-- ====================================================================== -->
    <target name="dependency-report" depends="init">
        <ivy:resolve conf="test-weld-embedded"/>
        <ivy:report todir="${project.build.directory}/dependency-reports/test-weld-embedded" conf="test-weld-embedded"/>
    </target>

    <!-- ====================================================================== -->
    <!-- Help target                                                            -->
    <!-- ====================================================================== -->
    <target name="help">
        <echo message="Please run: $ant -projecthelp"/>
    </target>
	
	<!-- ====================================================================== -->
    <!-- Cleaning up target                                                     -->
    <!-- ====================================================================== -->
    <target name="clean" description="Clean the output directory">
        <delete dir="${project.build.directory}"/>
    </target>
	
</project>